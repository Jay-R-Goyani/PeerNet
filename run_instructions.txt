PeerNet:Peer-to-Peer File Sharing System
================================
run_instructions.txt

This document explains how to set up, configure, and run the P2P File Sharing System implemented in C++. The project is compatible with Linux and macOS. For Windows users, instructions are provided to set up a Linux virtual machine.

-------------------------------------------------
1. Prerequisites and Dependencies
-------------------------------------------------
- Operating System: Linux (Ubuntu recommended) or macOS
- C++ Compiler: g++ (GCC) or clang++
- Libraries: pthread, sys/socket, fstream, standard C++ STL
- Git: For cloning the repository

For Linux, install build essentials:
    sudo apt update
    sudo apt install build-essential git

-------------------------------------------------
2. Cloning the Project
-------------------------------------------------
Clone the project repository from GitHub:
    git clone https://github.com/ManojDhundhalva/PeerNet.git
    cd PeerNet
    cd src

-------------------------------------------------
3. Building the Project
-------------------------------------------------
Compile the tracker and node programs:

    g++ -std=c++17 -pthread tracker.cpp -o tracker
    g++ -std=c++17 -pthread node.cpp -o node

-------------------------------------------------
4. Running the Project (Local/Network)
-------------------------------------------------
A. Start the Tracker (must be started first):
    ./tracker

- By default, the tracker listens on 127.0.0.1:12345 (see config.h).

B. Tracker IP Configuration:
- Localhost: Use 127.0.0.1 for tracker IP.
- LAN (WiFi/Hotspot): On the tracker machine, run `ip a` to find its IP address.
  On all nodes, update the tracker IP in config.h:
      static constexpr const char* TRACKER_IP = "<tracker-device-ip>";
  Rebuild the project after changing the IP.

C. Start a Node:
    ./node <node_id>

- Each node requires a unique integer node_id (e.g., 1, 2, 3, ...).

D. File Management:
- Each node has a directory: node_files/node<node_id>/
- To share a file, place it in your node's directory.

E. Registering and Sharing Files:
- In the node terminal, use:
    send <filename>      # Register and share a file with the tracker
    search <filename>    # Find which nodes have a file
    download <filename>  # Download a file from other nodes
    exit                 # Gracefully leave the network

-------------------------------------------------
5. Running on Windows (via Virtual Machine)
-------------------------------------------------
Using VirtualBox
1. Download and install VirtualBox (https://www.virtualbox.org/) and a Linux ISO (e.g., Ubuntu).
2. Create a new VM, allocate at least 2GB RAM and 20GB disk.
3. Mount the Linux ISO and install Linux in the VM.
4. After installation, open a terminal and follow the Linux instructions above.

consider installing Ubuntu on a dedicated partition instead of using a virtual machine.

-------------------------------------------------
6. Special Notes & Troubleshooting
-------------------------------------------------
- Ports: Ensure no firewall blocks UDP ports used by the tracker and nodes.
- Multiple Nodes: You can run multiple nodes on the same machine by using different node_id values and separate terminals.
- Logs: Logs are stored in the logs/ directory for both tracker and nodes.
- File Directory: All files to be shared or downloaded are managed in node_files/node<node_id>/.

-------------------------------------------------
7. Example Workflow
-------------------------------------------------
1. Start the tracker:
       ./tracker
2. Start two nodes in separate terminals:
       ./node 1
       ./node 2
3. Place example.txt in node_files/node1/
4. In node 1 terminal:
       send example.txt
5. In node 2 terminal:
       search example.txt
       download example.txt

-------------------------------------------------